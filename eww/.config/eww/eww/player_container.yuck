;REQUIREMENTS:
  ; convert :convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.
  ; playerctl
  ; material icons(FONT)
;OPTIONAL:
  ; lua

(defvar player_width 160)
(defvar player_height 100)

(defvar player_padding "30")
(defvar player_background_border_radius "10px")

(defvar load_player_background true)
(defvar more_info false)

; NOTE: parse these myself instead of having multiples
(deflisten now_playing_artist
  "playerctl --follow metadata --format '{{ artist }}'"
  ; "right so like nothing to see here i just wanna know if it will overflow or not cuz like yea it should"
)
(deflisten now_playing_title
  "playerctl --follow metadata --format '{{ title }}'"
  ; "right so like nothing to see here i just wanna know if it will overflow or not cuz like yea it should"
)

(deflisten now_playing_status
  "playerctl --follow metadata --format {{status}}"
)
(deflisten now_playing_volume
  "playerctl --follow volume"
)

(deflisten now_playing_image
  "playerctl --follow metadata mpris:artUrl"
)
(deflisten now_playing_length
  "playerctl --follow metadata --format '{{ mpris:length }}'"
)
(deflisten now_playing_position
  "playerctl --follow position --format '{{ position }}'"
)
(defvar last_image "")

(deflisten update_player_blurred_image
  "bash/blur_image.sh"
)

(defvar player_blured_image
  "null"
)

(defwidget audio_controls[]
  (box
    :valign "end"
    :halign "center"
    :orientation "h"
    ; :space-evenly false
    :class "player_controls"
    ; :spacing 3
    ; :class "padding:20px;"
    (overlay
      :visible false
      (box
      :width 0
      :height 0
      )
      (box
        :visible false
        {update_player_blurred_image}
      )
    )
    (eventbox
      :class "button"
      :onclick "playerctl previous"
      ; ""
      ; ""
      ""
    )
    (eventbox
      :class "button"
      :onclick "playerctl play-pause"
      {now_playing_status != "Playing"? "":""}
      
    )
    (eventbox
      :class "button"
      :onclick "playerctl next"
      ; ""
      ; ""
      ""
    )
  )    
)
(defwidget player_volume []
  (overlay
    (eventbox
      ; :class "audio_pill_progress"
      (box
        :orientation "v"
        :style "background-color:white;opacity:0.2"
        ; :valign "end"

        ; :height {replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}
        :width 6
        ; :height { round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0)  * 100 }
      )
    )
    (box
      :orientation "v"
      :style "background-color:white;opacity:0.4;"
      :width 6
      :height {now_playing_volume}
    )

  )
)

(defwidget player_progress []
    (box
      ; :visible {more_info? "true":"false"}
      :halign "center"
      :orientation "v"
      :space-evenly false
      ; :class "player_time"
      ; :width {player_width + player_padding}
      :width {player_width}
      ; :width {100}
      (overlay
        (eventbox
          ; :class "audio_pill_progress"
          (box
            ; :orientation "h"
            :style "background-color:white;opacity:0.2"
            ; :valign "end"

            ; :height {replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}
            :height 6
            ; :height { round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0)  * 100 }
          )
        )
        (box
          :style "background-color:white;opacity:0.4;"
          :halign "start"
          :height 6
          :width {round(round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0) * player_width,0)}
        )

      )
      ; (progress
      ;   :orientation "h"
      ;   :value  { round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0)  * 100 }
      ; )
      ; { round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0)  * 100 }
    )
)

(defwidget player_info[]
  (box
    :space-evenly false
    :orientation "v"
    :valign "center"
    :halign "start"
    :spacing 6
    :tooltip "${now_playing_title} by ${now_playing_artist}"
    (label
      :halign "start"
      :limit-width {player_width - player_padding}
      :text {now_playing_title}
      :style "color:white;font-size:xx-large;"
    )
    (label
      :halign "start"
      :limit-width 300
      :style "color:white;font-size:large;"
      :text {now_playing_artist}
    )
  )
)

(defwidget album_cover []
  (box
    :height 100
    :width 100
    :valign "center"
    :halign "center"
    :orientation "v"
    :style "margin:10px;background:center no-repeat url('${replace(now_playing_image,"file://","")}')"
  )
)

(defwidget mini_player []
  ; (box
  ;   :class "mini_player"
  ;   :halign "center"
  ;   :valign "center"
  ;   :space-evenly false
  (box
    :orientation "v"
    :space-evenly false
    :halign "center"
    :valign "center"
    :tooltip "${now_playing_title} by ${now_playing_artist}"
    ; NOTE: use style for burred bg image or just use class
    ; :class "base"
    :style "background:center no-repeat url('${player_blured_image}');background-size:cover;padding:6;"

     (box
      :orientation "v"
      :space-evenly false
      :halign "center"
      :valign "center"
      (eventbox
        :onscroll 'lua lua/player_scroll.lua {}'      
        (box
          :orientation "v"
          :space-evenly false
          :halign "center"
          :valign "center"
          :height 100
          (overlay
            ; :halign "center"
            ; :valign "end"
            (box
              :halign "center"
              :valign "center"
              :class "mini_player_progress"
              ; :style "background-color:white;border-color:red;border-width:20px;margin:4px;opacity:0.5;"
              ; :style "border-radius:8px;"
              ; :style "border-radius:100%;margin:20px;"
              (overlay
                (box
                  :halign "center"
                  :valign "center"
                  :width 90
                  :height 90
                )
                (revealer
                  :reveal {replace(now_playing_image,"file://","") == ""? false : true}
                  :halign "center"
                  :valign "center"
                  ; :style "clip-path:inset(200px,200px,200px,200px);"
                  ; :style "color:red;"
                  ; :class ""
                  (circular-progress
                    :start-at 25
                    :thickness 70
                    :value {round(round(now_playing_position / 1000000,0)  / round(now_playing_length / 1000000,0) * 100,0)}
                  )
                )
              )

            )
            (album_cover)
          )
        )
      )
      (audio_controls)
    )
  )
)

; FIXME: once again i need to figure this out.
; i need to set the opacity for only the background image
(defwidget player_container[]
  ; (eventbox 
  ;   :onhoverlost "eww close player_widget"
  ;   :onclick "eww close player_widget"
    ; :style "border-radius:${player_background_border_radius};opacity:1;background-color:black;"
    ; :style "border-radius:${player_background_border_radius};"
  (box ;player container
    :orientation "v"
    :space-evenly false
    :halign "start"
    :valign "center"
    ; :style "border-radius:${player_background_border_radius};background:center no-repeat url('${player_blured_image}');background-size:cover;opacity:0.6;"
    ; :style "border-radius:${player_background_border_radius};background:center no-repeat url('${player_blured_image}');background-size:cover;"
    :class "base"
    (overlay
      (revealer
        :reveal {last_image != now_playing_image? false:true}
        :transition "crossfade"
        :duration "2s"
        :halign "center"
        :valign "center"
        (box
          :height {player_height * 2}
          :width {player_width * 2}
          ; :style "border-radius:${player_background_border_radius};background:center no-repeat url('${player_blured_image}');background-size:${player_width * 2}px ${player_height * 4}px;opacity:0.6;"
          ; :style "border-radius:${player_background_border_radius};background:center no-repeat url('${player_blured_image}');background-size:cover;"
          ; :class "player_container_bg_opacity"
          :style "opacity:0.9;background:center no-repeat url('${player_blured_image}');background-size:cover;"
          (box
            ;just for the opacity
          )
        )
      )
    (eventbox
      :onscroll 'lua lua/player_scroll.lua {}'
      :onhover 'eww update more_info="true"'
      :onhoverlost 'eww update more_info="false"'
      (box
        :orientation "v"
        :spacing 8
        :space-evenly false
        :valign "start"
        :style "padding:${player_padding}px;"
        (box
          :space-evenly false
          :spacing 6
          (album_cover)
          (player_info)
        )
        ; (revealer
        ;   :reveal {more_info? "true":"false"}
          (player_progress)
        ; )
        (audio_controls)
      )
    )    
    )
  )
)


(defwindow player_widget
  :monitor 0
  :stacking "overlay"
  :windowtype "dock"
  :exclusive false
  :geometry (geometry 
             :x "3%"
             :y "3%"
             :anchor "left top"
            )
  (box
    :style "background:none;"
      (player_container)
  )
)

