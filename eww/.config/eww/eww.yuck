(include "./clock.yuck")
(include "./stats.yuck")
(include "./launcher.yuck")
(include "./player_container.yuck")
(include "./notifications.yuck")
(include "./audio_sinks.yuck")
(include "./audio_sources.yuck")

(defvar orientation "v")
(defvar widget_spacing "16")

(defvar run false) ;volume_level only runs once 
(defvar expander false)

(defpoll brightness_value
  :interval "5s"
  "light -G"
)

(defpoll volume_level
  :interval "60s"
  :run-while run
  "go/audio/main sink"
)
(defpoll volume_muted
  :interval "1s"
  "wpctl get-volume @DEFAULT_AUDIO_SINK@ | cut -d ' ' -f3"
)
(defpoll mic_level
  :interval "60s"
  :run-while run
  "go/audio/main source"
)

(defwidget window[]
  (box 
    :orientation {orientation}
    :halign "start"
    :valign "center"
    :space-evenly false
  "ok"
  )
)
(defwidget volume[]
  (eventbox
    :class "volume"
    ; :onclick "go/audio/volume_level mute"
    :onclick "lua lua/open_widget.lua audio_control"
    :onrightclick "lua lua/open_widget.lua player_widget"
    :onscroll "go/audio/main sink {}"
    :cursor "pointer"
    ; :tooltip "${replace(volume_level,"Volume level: ","")}" 
    ; :onhover "eww update expander='true'"
    ; :onhoverlost "eww update expander='false'"
      ; (box
      ;   :orientation "v"
      ;   :height 100
      ;   ; :space-evenly true
      ;   (progress_bar 
      ;     :width 10
      ;     :scroll {"go/audio/volume_level {}"}
      ;     :click {"go/audio/volume_level mute"}
      ;     :value "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}"
      ;     :text {replace(volume_level,"Volume level: ","") + 0.0}
      ;   )
      ;   "󰓃"
      ; )
      (box
        :orientation {orientation}
        (overlay
          (circular-progress
            :thickness 3
            :start-at 45.0
            :value {replace(volume_level,"Volume level: ","") + 0.0}
            :style "opacity: 0.5;"
          )
          (circular-progress
            :thickness 3
            :start-at 45.0
            :value {replace(volume_level,"Volume level: ","") + 0.0 - 100}
            ; :style "color: #c95c49;"
          )
        )
        ; "󰓃"
        ; ""
        ; ""
        ; ""
        {volume_muted == "[MUTED]"? "":""}
        
        ; (label
        ;   ; :style "style:striketrough;"
        ;   :text "" 
        ; )
      )
  )
)


(defwindow brightness_control
  :namespace "canvas"
  :monitor 0
  :stacking "overlay"
  :windowtype "dock"
  :exclusive false
  :geometry (geometry 
             :x "60px"
             ; :x "2%"
             :y "10%"
             :anchor "left top"
            )
  (eventbox
    :onhoverlost "eww close brightness_control"
      (box 
        :orientation "h"
        :halign "start"
        :valign "center"
        :space-evenly false
        ; :class "audio_control"
        ; :class "base"
        :class "canvas"
        :spacing 10
        ; (box
        ;   :orientation "h"
        ;   :height 100
        ;   :halign "start"
        ;   :valign "center"
        ;   :space-evenly false
        ;   :spacing 10
        ;   :class "base"
        ;   (progress_bar 
        ;     :width 35
        ;     :scroll 'lua lua/scroll_handler.lua {} "light -A 0.5" "light -U 0.5" "light -G" "brightness_value"'
        ;     :click {"light -G"}
        ;     :value "${round(brightness_value,0)}"
        ;     ; :value 10
        ;     :text "${round(brightness_value,0)}"
        ;   )
        ;   "backlight"
        ; )
        ; (mini_player)
        (brightness_container)
        ; (sinks_container :percent "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}")
      )
  )
)

(defwidget brightness[]
  (eventbox
    :class "volume"
    :cursor "pointer"
    ; :onclick "go/audio/volume_level mute"
    ; :onclick "lua lua/open_widget.lua audio_control"
    ; :onrightclick "lua lua/open_widget.lua player_widget"
    ; :onscroll "go/audio/volume_level {}"
    :onscroll 'lua lua/scroll_handler.lua {} "light -A 2" "light -U 2" "light -G" "brightness_value"'
    :onclick "lua lua/open_widget.lua brightness_control"
    ; :tooltip "${replace(volume_level,"Volume level: ","")}" 
    ; :onclick {"pgrep gamma >/dev/null && pkill gammastep || gammastep -o -O 4000 -b 0.6"}
    ; :onhover "eww update expander='true'"
    ; :onhoverlost "eww update expander='false'"
      ; (box
      ;   :orientation "v"
      ;   :height 100
      ;   ; :space-evenly true
      ;   (progress_bar 
      ;     :width 10
      ;     :scroll {"go/audio/volume_level {}"}
      ;     :click {"go/audio/volume_level mute"}
      ;     :value "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}"
      ;     :text {replace(volume_level,"Volume level: ","") + 0.0}
      ;   )
      ;   "󰓃"
      ; )
      (box
        :orientation {orientation}
        (circular-progress
          :thickness 3
          :start-at 45.0
          ; :value {replace(volume_level,"Volume level: ","") + 0.0}
          :value "${round(brightness_value,0)}"
    ;     :text "${round(brightness_value,0)}"
        )
        ; "bl"
        ; ""
        ""
        ; ""
        ; ""
      )
  )
)

(defvar workspace_icon
  `(box
    ""
  )`
)

(defwidget workspace []
  (box
    :orientation "v"
    :space-evenly false
    :spacing 3
    (literal
      :content {workspace_icon}
    )
    (literal
      :content {workspace_icon}
    )
    (literal
      :content {workspace_icon}
    )
    (literal
      :content {workspace_icon}
    )
  )
)

(defwidget main[]
  (box 
    :orientation {orientation}
    :halign "start"
    :valign "start"
    :space-evenly false
    :class "main"
    :spacing 15
    (eventbox
      :class "open"
      :cursor "pointer"
      :onclick "lua lua/open_widget.lua control"
      ; ""
      ; ""
      ; ""
      ""
      ; ""
      ; ""
    )
    (clock)
    (box
      :orientation "v"
      :space-evenly false
      :class "controls"
      ; :width 15
      :spacing 6
      ; :class "base_alt"
      (volume)
      (brightness)
    )
    ; (box
    ;   :orientation "v"
    ;   :space-evenly false
    ;   (progress_bar 
    ;     :height 50
    ;     :width 20
    ;     :scroll {"go/audio/volume_level {}"}
    ;     :click "lua lua/open_widget.lua audio_control"
    ;     :value "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}"
    ;     :text {replace(volume_level,"Volume level: ","") + 0.0}
    ;   )
    ;   "VL"
    ; )
    ; (box
    ;   :orientation "v"
    ;   :space-evenly false
    ;   (progress_bar 
    ;     :height 50
    ;     :width 20
    ;     :scroll 'lua lua/scroll_handler.lua {} "light -A 2" "light -U 2" "light -G" "brightness_value"'
    ;     :click {"pgrep gamma >/dev/null && pkill gammastep || gammastep -o -O 4000 -b 0.6"}
    ;     :value "${round(brightness_value,0)}"
    ;     :text "${round(brightness_value,0)}"
    ;   )
    ;   "BL"
    ; )
    ; (window)
    (toggle)
    (reveal)
    (eventbox
      :onclick "alacritty -e sudo poweroff now"
      :cursor "pointer"
      (box
        ""
        ; "PP"
      )
    )
    ; (workspace)   
  )
)

(defwidget sub[]
  (box
    ; :style {expander? "opacity:1;":"opacity:0;"}
    :orientation {orientation}
    (revealer
      ; :visible {expander}
      :halign "start"
      :valign "start"
      ; :reveal {expander}
      :reveal true
      :transition "slideright"
      (box
        :orientation {orientation}
        :class "sub"
        :spacing 12
        (eventbox
          :onclick 'go/audio/main sink mute'
          :onrightclick 'lua lua/open_widget.lua player_container'
          :onscroll 'go/audio/main sink {}'  
          (progress
            :value {replace(volume_level,"Volume level: ","") + 0.0}
          )
        )
      )
    )
  )
)
(defwindow sub_bar[]
  :monitor 0
  :stacking "overlay"
  :windowtype "dock"
  :exclusive true
  :geometry (geometry 
             :x "40px"
             :y "0px"
             :height "99%"
             :width "0px"
             :anchor "left center"
            )
  ; :reserve (struts :distance "32px" :side "left")

  (eventbox 
    :halign "start"
    :valign "start"
    ; :onclick "go/audio/volume_level mute"
    ; :onclick "eww open audio_container"
    :onhover "eww update expander='true'"
    ; :onhoverlost "eww update expander='false'"
    :onhoverlost "eww close sub_bar"
    (box
      :orientation {orientation == "v"? "h": "v"}
      :halign "start"
      :valign "start"
      :space-evenly false
      (sub)
    )
  )

)

(defwindow bar [gap dist]
  :namespace "bar"
  :monitor 0
  :stacking "fg"
  :windowtype "dock"
  :exclusive false
  :geometry (geometry 
             :x gap
             :y "14px"
             :height "95%"
             ; :width "0px"
             :anchor "left top"
            )
  ; :reserve (struts :distance "34px" :side "left")
  :reserve (struts :distance dist :side "left")

  (eventbox 
    :halign "start"
    :valign "start"
    ; :onclick "go/audio/volume_level mute"
    ; :onclick "eww open audio_container"
    ; :onhover "eww open sub_bar"
    ; :onhoverlost "eww close sub_bar"
    (box
      :orientation {orientation == "v"? "h": "v"}
      :halign "start"
      :valign "start"
      :space-evenly false
      :class "bar_container"
      (main)
    )
  )
)

; (defwidget control_center[]
;   (eventbox
;     ; :onhoverlost "eww close control"
;     (box
;       :halign "center"
;       :halign "center"
;       :orientation "v"
;       :space-evenly false
;       (player_container)
;       (sinks_container :percent "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}")
;     )
;   )
; )
(defwidget _button [icon action size ?query]
  (box
    :halign "center"
    :valign "center"
  (eventbox
    ; :class {query?"inactive":"active"}
    :class "inactive"
    :onclick action
    :cursor "pointer"
    (box
      :width size
      :height size
      icon
    )
  )
  )
)

(defwidget brightness_container[]
  (box
    :orientation "v"
    :halign "start"
    :valign "center"
    :space-evenly false
    :spacing 6
    :class "base"
    (box
      :orientation "h"
      :height 100
      :halign "start"
      :valign "center"
      :space-evenly false
      :spacing {widget_spacing}
      :spacing 6
      ; :class "base"
      (progress_bar 
        :width 35
        ; :scroll {'if [[ {} == "up" ]];then light -A 3; else ehco hi fi;'}
        :scroll 'lua lua/scroll_handler.lua {} "light -A 0.5" "light -U 0.5" "light -G" "brightness_value"'
        ; :click {"pgrep gamma >/dev/null && pkill gammastep || gammastep -o -O 4000 -b 0.5 &"}
        ; :click "lua lua/open_widget.lua brightness_control"
        :value "${round(brightness_value,0)}"
        :text "${round(brightness_value,0)}"
      )

      (box
        :space-evenly false
        :orientation "v"
        :spacing 6
        :class "sinks_sections"
        (box
          :orientation "h"
          :spacing 6
          (_button :icon "" :action "notify-send yolo" :size 35 :action "pgrep gamma >/dev/null && pkill gammastep || gammastep -o -O 4000 &")
          (_button :icon "" :action "notify-send yolo" :size 35 :action "pgrep gamma >/dev/null && pkill gammastep || gammastep -o -O 4000 -b 0.5 ")
          ; (_button :icon "dark" :action "notify-send yolo" :size 35)        
        )
        (box
          :orientation "h"
          :spacing 6
          (_button :icon "" :action "notify-send yolo" :size 35)        
          (_button :icon "" :action "notify-send yolo" :size 35)        
        )
      )
    )
    (box
      ; ""
      ""
      ; ""
    )
  )
)

(defwindow control[]
  :namespace "canvas"
  :monitor 0
  :stacking "overlay"
  :windowtype "dock"
  :exclusive false
  :geometry (geometry 
             :x "60px"
             :y "18px"
              ; :height "99%"
             :anchor "left top"
            )
  (eventbox
    :onhoverlost "lua lua/open_widget.lua control"
    ; :onclick "lua lua/open_widget.lua control"
    (box
      :halign "start"
      :valign "center"
      :orientation "h"
      :spacing {widget_spacing}
      :space-evenly false
      ; :style "background-color:${main_color}0.5);color:${main_text_color};padding:20px;"
      :class "canvas"
      (box
        :orientation "v"
        :space-evenly false
        :spacing {widget_spacing}
        (player_container)
        (box
          :orientation "h"
          :space-evenly false
          :spacing {widget_spacing}
          (brightness_container)
          ; (mini_player)
        )
      )
      (box
        :orientation "v"
        :space-evenly false
        :spacing {widget_spacing}
        (sinks_container :percent "${replace(volume_level,"Volume level: ","") + 0.0 >= 100? "100":replace(volume_level,"Volume level: ","") + 0.0}")
        (sources_container)
      )
    )
  )
)
(deflisten wallpaper
  ; "tail -f ~/.fehbg"
  "tail -f ~/.eww_wallpaper"
)

; (defvar bar_padding
;   "2"
; )

; (defvar screen_padding
;   "30"
; )

; "wlr-randr | grep preferred | head -1 | cut -d 'x' -f 1 | awk '{$1=$1};1'"
; "wlr-randr | grep -n 'Enabled: yes' -A 2 | tail -1 | cut -d '-' -f2 |  cut -d 'x' -f 1 | awk '{$1=$1};1'"

(deflisten screen_width
  `wlr-randr | grep -n 'Enabled: yes' -A 2 | tail -1 | cut -d '-' -f2 |  cut -d 'x' -f 1 | awk '{$1=$1};1'`
  ; "1600"
  ; "2560"
)

(defwindow main_bar[]
  :monitor 0
  :geometry (geometry 
              ; :x "-40px"
              ; :y "0%"
              ; :width "101%"
              ; :height "100%"
              ; :anchor "left top"
              ; :x "0%"
              ; :y "0%"
              :height "100%"
              :anchor "left center"
            )
  :stacking "bg"
  ; :windowtype "desktop"
  :exclusive true
  :focusable false
  :wm-ignore false
  (box
    ; :width {screen_padding}
    :class "main_bar"
    :style "padding: 3px 0px 3px 3px;"
    ; :style "padding: ${bar_padding}px;"
    (main)
  )
)

(defwidget wallpaper_container [bar_padding screen_padding]
  (box
    ; :width {screen_width - screen_padding - bar_padding - bar_padding - 14}
    :halign "center"
    ; :space-evenly false
    ; :halign "center"
    :class "back_window"
    ; :style "padding: ${bar_padding + 6}px;"
    :style "padding: ${bar_padding}px;"
    ; (overlay
      ; (box
      ;   :width {screen_width - screen_padding - bar_padding - bar_padding - 14}
      ; )
      (box
        :halign "center"
        ; :space-evenly false
        :width {screen_width - bar_padding}
        ; :width {screen_width}
        ; :halign "center"
        ; :style "background:center no-repeat url(${replace(wallpaper,'/usr/bin/feh --no-fehbg --bg-fill ','')});background-size:cover;background-position: center -500px;"
        :style {screen_width == "2560"? "background:center no-repeat url('${wallpaper}');background-size:cover;background-position: center -700px;": "background:center no-repeat url('${wallpaper}');background-size:cover;background-position: center -300px;"} 
        ; :style "background:center no-repeat url(${replace(wallpaper,'/usr/bin/feh --no-fehbg --bg-fill ','')});background-size:cover;background-position: center -700px;"
        ; :class "back_window_wallpaper"
      )    
    ; )
  )
)

(defwindow main_wallpaper[]
  :monitor 0
  :geometry (geometry 
              ; :x "-40px"
              ; :y "0%"
              ; :width "101%"
              ; :height "100%"
              ; :anchor "left top"
              ; :x "0%"
              ; :y "0%"
              ; :width "100%"
              :height "100%"
              :anchor "left center"
            )
  :stacking "bg"
  ; :windowtype "desktop"
  :exclusive false
  :focusable false
  :wm-ignore false
  (wallpaper_container :bar_padding 2 :screen_padding 30) 
)

(defwindow just_wallpaper[]
  :monitor 0
  :geometry (geometry 
              ; :x "-40px"
              ; :y "0%"
              ; :width "101%"
              ; :height "100%"
              ; :anchor "left top"
              ; :x "-44px"
              ; :x "-40px"
              ; :y "0%"
              ; :width "100%"
              :height "100%"
              :anchor "center"
            )
  :stacking "bottom"
  ; :windowtype "desktop"
  :exclusive false
  :focusable false
  :wm-ignore false
  (wallpaper_container :bar_padding 6 :screen_padding 0) 
)
